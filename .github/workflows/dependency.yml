name: Run post-checks after dependency updates
on:
  pull_request:
      branches:
        - main
      paths:
      - package.json
      - yarn.lock
      - .github/workflows/dependency.yml

jobs:
  check-licenses-file:
    name: Check and update licenses file
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: '${{ github.head_ref }}'
          token: '${{ steps.generate-token.outputs.token }}'

      - name: Install dependencies
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'

      - name: Install dependencies
        run: YOUTUBE_DL_SKIP_DOWNLOAD=true yarn install --frozen-lockfile --non-interactive --prefer-offline

      - name: Make sure all patches are up-to-date
        continue-on-error: true
        id: patch-package
        run: |
          yarn patch-package --error-on-fail --error-on-warn

      - name: If patch-package failed, add comment on PR
        if: ${{ steps.patch-package.outcome != 'success' && github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const comments = await github.rest.issues.listComments({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const patchPackageComment = comments.data.find(comment => comment.body.includes('Patch package failed'));
            
            if (!patchPackageComment) {
              // Only create a new comment if one doesn't already exist
              const commentBody = `:warning: **Patch package failed**\n\nPlease run \`yarn patch-package\` locally to update the patches.`;
              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody,
              });
            }

      - name: If patch-package did not fail, remove previous comment
        if: ${{ steps.patch-package.outcome == 'success' && github.event_name == 'pull_request' }}
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const comments = await github.rest.issues.listComments({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const patchPackageComment = comments.data.find(comment => comment.body.includes('Patch package failed'));
            if (patchPackageComment) {
              await github.rest.issues.deleteComment({
                comment_id: patchPackageComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
            }

      - name: If patch-package failed, fail the job
        if: ${{ steps.patch-package.outcome != 'success' }}
        run: exit 1

      - name: Generate licenses file
        # should run when installing packages but run it again to be sure
        run: |
          CI_FORCE_GENERATE_LICENSES=true yarn run license-check

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: 'Update licenses file'
          branch: '${{ github.head_ref }}'
          file_pattern: 'backend/licenses.json'
